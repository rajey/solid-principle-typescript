SOLID PRINCIPLES (Robert C. Martin - Uncle Bob)

Single Responsibility
    Each class should have only one sole purpose
    and not be filled with exessive functionality

Open closed
    Classes should be opened for extension,
    closed for modification

    In other words, you should not have to rewrite 
    an existing class for implementing new feature

Liskov Substitution
    This means that, every subclass or 
    derived class should be substitutable for their 
    base or parent class

Interface Segregation
    Interfaces should not force classes to implement 
    what they can't do
    Large interfaces should be divided into small ones

Dependecy Inversion
    Components should depend on abstractions,
    not on concretions